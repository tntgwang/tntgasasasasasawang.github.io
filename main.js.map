{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/footer/footer.component.html","webpack:///./src/app/core/footer/footer.component.scss","webpack:///./src/app/core/footer/footer.component.ts","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.scss","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/x/http/http.service.ts","webpack:///./src/x/http/toast-notification.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"common\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"common\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path:'auth',\n    loadChildren: './auth/auth.module#AuthModule'\n  },\n  {\n    path: '',\n    loadChildren: './admin/admin.module#AdminModule'\n  },\n  {\n    path: '',\n    redirectTo: 'admin',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n<ng-snotify></ng-snotify>\\n<!-- <ngx-spinner bdOpacity = 0.9 bdColor = \\\"#fff\\\" size = \\\"medium\\\" color = \\\"#ccc\\\" type = \\\"ball-atom\\\" fullScreen = \\\"true\\\"></ngx-spinner> -->\\n<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-atom\\\"></ngx-spinner>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { ToastNotificationService } from 'src/x/http/toast-notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'master';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HttpService } from 'src/x/http/http.service';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    NgxSpinnerModule,\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastDefaults, SnotifyService, SnotifyModule } from 'ng-snotify';\nimport { ToastNotificationService } from 'src/x/http/toast-notification.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpErrorService, AuthHttpService, HttpService } from 'src/x/http/http.service';\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [FooterComponent, HeaderComponent],\n  imports: [\n    CommonModule,\n    SnotifyModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule\n  ],\n  providers:[\n    ToastNotificationService,\n    { provide: 'SnotifyToastConfig', useValue: ToastDefaults},\n    SnotifyService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass:AuthHttpService ,\n      multi: true\n    }\n  ], \n  exports: [\n    SnotifyModule, FooterComponent, HeaderComponent, \n  ]\n})\nexport class CoreModule { }\n","module.exports = \"  <!-- Footer -->\\n  <footer class=\\\"py-5 bg-dark\\\">\\n    <div class=\\\"container\\\">\\n      <p class=\\\"m-0 text-center text-white\\\">Copyright &copy; Your Website 2019</p>\\n    </div>\\n  </footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"  <!-- Navigation -->\\n  <nav class=\\\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"[ '/']\\\">Start Bootstrap</a>\\n      <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a [routerLink]=\\\"[ '/']\\\" class=\\\"nav-link\\\">Trang chủ</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a [routerLink]=\\\"[ '/user-info' ]\\\" class=\\\"nav-link\\\">Trang cá nhân</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"contact.html\\\">Contact</a>\\n          </li>\\n          <!-- <li class=\\\"nav-item dropdown\\\">\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownBlog\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              Blog\\n            </a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownBlog\\\">\\n              <a class=\\\"dropdown-item\\\" href=\\\"blog-home-1.html\\\">Blog Home 1</a>\\n              <a class=\\\"dropdown-item\\\" href=\\\"blog-home-2.html\\\">Blog Home 2</a>\\n              <a class=\\\"dropdown-item\\\" href=\\\"blog-post.html\\\">Blog Post</a>\\n            </div>\\n          </li> -->\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  uid:number\n  constructor(\n  ) { }\n\n\n  getToken(){\n    return localStorage.getItem('access-token')\n  }\n\n  setToken(value: string){\n    return localStorage.setItem('access-token', value)\n  }\n\n  getItem(key: string) {\n    localStorage.getItem(key)\n  }\n\n  setItem(key: string, value: Object) {\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseURL: 'http://vocabulary.petngao.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ToastNotificationService } from './toast-notification.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(\n    private http         : HttpClient,\n    private toastService : ToastNotificationService,\n    private spinner      : NgxSpinnerService\n  ) { }\n\n  Get<T>(url: string, params?: any) {\n    this.spinner.show();\n    return this.http.get<T>(url, { params: params }).map(res => {\n      return res ? res : [];\n    }).finally(() => { \n      this.spinner.hide()\n    });\n  }\n\n  Post<T>(url: string, body: any) {\n      this.spinner.show();\n      return this.http.post<T>(url, body).map(res => {\n          return res ? res : []\n      }).catch(err => {\n          return Observable.throw(err)\n      }).finally(() => {\n         this.spinner.hide() \n      });\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthHttpService implements HttpInterceptor {\n\n    constructor(\n      private authService : AuthService\n    ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = req.clone({\n            setHeaders: {\n                'access-token': this.authService.getToken()\n            },\n        });\n        return next.handle(req);\n    }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpErrorService implements HttpInterceptor {\n\n    constructor(\n        private toastService : ToastNotificationService,\n        private spinner      : NgxSpinnerService\n\n    ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // return next.handle(req).catch((err: HttpErrorResponse) => {\n        //     console.log(err)\n        //     if (err.error instanceof Error) {\n        //         console.error('An error accured', err.error.message);\n        //     } else {\n        //         this.toastService.error(err.error['error']);\n        //     }\n        //     return Observable.throw(err);\n        // });\n\n        return next.handle(req).do((event: HttpEvent<any>) => { }, (err: any) => {\n            if (err instanceof HttpErrorResponse) {\n                // do error handling here\n                if (err.status == 0) {\n                    this.toastService.error('Không kết nối được đến server');\n                } else {\n                    this.toastService.error(err.error['error']);\n                }\n            }\n        });\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { SnotifyService } from 'ng-snotify';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastNotificationService {\n\n  constructor(\n    private snotifyService: SnotifyService,\n  ) { }\n\n  clear() {\n    this.snotifyService.clear()\n  }\n\n  success(message: string) {\n    this.clear()\n    this.snotifyService.success(message);\n  }\n\n  error(message: string) {\n      this.clear()\n      this.snotifyService.error(message);\n  }\n\n}\n"],"sourceRoot":""}